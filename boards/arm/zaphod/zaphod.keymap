/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAV_L 1
#define SYM_L 2
#define NUM_L 3
#define FUN_L 4
#define MED_L 5

#define QWERTY_BASE

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    tap_dances {
    	dot_ques: dot_ques {
		compatible = "zmk,behavior-tap-dance";
		label = "TD_DOT_QUES";
		#binding-cells = <0>;
		tapping-term-ms = <100>;
		bindings = <&kp DOT>, <&kp LS(FSLH)>;
	};
    };

    cond_layers {
        compatible = "zmk,conditional-layers";
	tri {
	    if-layers = <NUM_L NAV_L>;
	    then-layer = <SYM_L>;
        };
    };

    combos {
        compatible = "zmk,combos";

	l_curly_bracket {
	    timeout-ms = <50>;
            key-positions = <1 11>;
            bindings = <&kp LS(LBKT)>;
	    layers = <NUM_L>;
	};

	r_curly_bracket {
	    timeout-ms = <50>;
            key-positions = <3 13>;
            bindings = <&kp LS(RBKT)>;
	    layers = <NUM_L>;
	};
	lbracket {
	    timeout-ms = <50>;
            key-positions = <11 21>;
            bindings = <&kp LBKT>;
	    layers = <NUM_L>;
	};

	rbracket {
	    timeout-ms = <50>;
            key-positions = <13 23>;
            bindings = <&kp RBKT>;
	    layers = <NUM_L>;
	};

	ques_mark_combo {
	    timeout-ms = <50>;
            key-positions = <18 28>;
            bindings = <&kp LS(FSLH)>;
	};

	fslash_combo {
	    timeout-ms = <50>;
            key-positions = <19 29>;
            bindings = <&kp FSLH>;
	};

	/*
        fn_mo {
	    timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&mo FUN_L>;
        };

        media_mo {
	    timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&mo MED_L>;
        };

        caps_word_combo {
	    timeout-ms = <50>;
            key-positions = <13 16>;
            bindings = <&caps_word>;
        };
	*/
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

#ifdef QWERTY_BASE
        qwerty_layer {
            label = "Qwerty";
            bindings = <
                &kp Q      &kp W      &kp E       &kp R          &kp T         &kp Y            &kp U          &kp I       &kp O      &kp P
                &kp A      &kp S      &kp D       &kp F          &kp G         &kp H            &kp J          &kp K       &kp L      &kp QUOT
                &kp Z      &kp X      &kp C       &kp V          &kp B         &kp N            &kp M          &kp COMMA   &kp DOT    &kp SEMI
                                                  &mo NAV_L     &kp LSHFT      &kp SPACE  &mo NUM_L
            >;
        };
#else
        colemak_dhm_layer {
            label = "Colemak-DHm";
            bindings = <
                &kp Q      &kp W      &kp F       &kp P          &kp B         &kp J            &kp L          &kp U       &kp Y      &kp QUOT
                &kp A      &kp R      &kp S       &kp T          &kp G         &kp M            &kp N          &kp E       &kp I      &kp O
                &kp Z      &kp X      &kp C       &kp D          &kp V         &kp K            &kp H          &kp COMMA   &kp DOT    &kp SEMI     
                                                  &mo NAV_L     &kp LSHFT      &kp SPACE        &mo NUM_L
            >;
        };
#endif

        nav_layer {
            label = "Nav";
            bindings = <
                &trans     &trans     &trans      &trans          &trans       &kp TILDE        &kp TAB        &trans      &kp BKSP   &kp DEL
                &sk LSHFT  &sk LALT   &sk LCTRL   &sk LGUI        &trans       &kp LARW         &kp DARW       &kp UARW    &kp RARW   &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &kp HOME       &kp PG_DN   &kp PG_UP  &kp END
                                                  &trans          &trans       &kp RET          &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &kp ESC   &kp N7     &kp N8      &kp N9          &kp RBKT      &trans        &trans         &trans      &trans     &trans
                &kp MINUS  &kp N4     &kp N5      &kp N6          &kp EQUAL     &trans        &sk LGUI       &sk LCTRL      &sk LALT     &sk LSHFT
                &kp PLUS  &kp N1     &kp N2      &kp N3          &kp N0        &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                                                  &trans          &trans        &trans        &trans
            >;
        };
	
	sym_layer {
            label = "Sym";
            bindings = <
                &kp ESC    &kp LS(N7)  &kp LS(N8)  &kp LS(N9) &kp BSLH         &trans        &kp LBKT &kp RBKT  &trans    &kp GRAVE
                &kp MINUS  &kp LS(N4)  &kp LS(N5)  &kp LS(N6) &kp FSLH         &trans        &sk LGUI &sk LCTRL &sk LALT  &sk LSHFT
	        &kp PLUS   &kp LS(N1)  &kp LS(N2)  &kp LS(N3) &kp LS(N0)       &trans        &trans   &trans    &trans    &kp LS(FSLH)
                                                   &trans     &trans           &trans        &trans
            >;
        };

	/*
        fun_layer {
            label = "Fun";
            bindings = <
                &kp F12     &kp F7     &kp F8      &kp F9     &kp PSCRN         &trans          &trans         &trans      &trans     &trans
                &kp F11     &kp F4     &kp F5      &kp F6     &kp SLCK          &trans          &trans         &trans      &trans     &trans
                &kp F10     &kp F1     &kp F2      &kp F3     &kp PAUSE_BREAK   &trans          &trans         &trans      &trans     &trans
                                                   &none      &none             &trans          &trans
            >;
        };
        media_layer {
            label = "Media";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &kp C_PREV     &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                                                  &trans          &trans       &kp C_PLAY_PAUSE &kp C_MUTE
            >;
        };
	*/
    };
};
